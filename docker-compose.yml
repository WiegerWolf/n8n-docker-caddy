networks:
  n8n-network:
    driver: bridge

services:
  traefik:
    image: traefik:v3
    restart: unless-stopped
    environment: # see https://doc.traefik.io/traefik/reference/static-configuration/env/ for reference on each variable used below
      # see https://github.com/traefik/traefik/issues/3870#issuecomment-501566619 for explanation of this variable
      - TZ=${GENERIC_TIMEZONE}
    command: 
      - --api.insecure=true 
      - --providers.docker 
      - --accesslog=true
    labels:
      - "traefik.enable=false"
    ports: # HTTPS is handled by Cloudflare DNS Proxy, so we only need HTTP here
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - n8n-network
    depends_on:
      - n8n

  n8n:
    image: docker.n8n.io/n8nio/n8n
    networks:
      - n8n-network
    restart: always
    ports:
      - 5678:5678
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.n8n.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)"
    environment:
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - N8N_RUNNERS_ENABLED=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - NODE_ENV=production
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      # Database Settings
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
      - DB_POSTGRESDB_PORT=${DB_POSTGRESDB_PORT}
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_POSTGRESDB_SSL_ENABLED=true
    volumes:
      - n8n_data:/home/node/.n8n
      - puppeteer_data:/home/node/.cache/puppeteer

volumes:
  caddy_data:
  n8n_data:
  puppeteer_data:
